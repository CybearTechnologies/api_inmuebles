<?php

use PHPUnit\Framework\TestCase;

require_once __DIR__ . './../../vendor/autoload.php';
require_once __DIR__ . './../../src/logic/FactoryCommand.php';
require_once __DIR__ . './../../src/logic/Command.php';
require_once __DIR__ . './../../src/data_access/Dao/FactoryDao.php';
require_once __DIR__ . './../../src/data_access/Dao/Dao.php';
require_once __DIR__ . './../../core/Environment.php';
//-----------------------------------------------------------------------
require_once __DIR__ . './../../src/data_access/Dao/DaoPlan.php';
require_once __DIR__ . './../../src/logic/Plan/CommandCreatePlan.php';
class CreatePlanCommandTest extends TestCase {
	private $_command;
	private $_plan;

	public function testExecute () {
		try {
			$this->_command->execute();
			$plan = $this->_command->return();
			//	Autogenerated Fields
			$this->_plan->setId($plan->getId());
			$this->_plan->setDateCreated($plan->getDateCreated());
			$this->_plan->setDateModified($plan->getDateModified());
			//	Delete test row
			Environment::database()->exec('DELETE FROM plan WHERE pl_id =' . $plan->getId());
			$this->assertEquals($this->_plan, $this->_command->return());
		}
		catch (DatabaseConnectionException $exception) {
			echo $exception->getMessage();
		}
		catch (PlanAlreadyExistException $exception) {
			echo $exception->getMessage();
		}
	}

	protected function setUp ():void {
		parent::setUp();
		$this->_plan = FactoryEntity::createPlan(-1, "ewfeeewt", 91912, 1, 0, 1);
		$this->_command = FactoryCommand::createCommandCreatePlan($this->_plan);
	}
}
